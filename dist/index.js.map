{"version":3,"file":"index.js","sources":["../src/hooks/useEventCallback.ts","../src/utils/clamp.ts","../src/components/common/Interactive.tsx","../src/utils/format.ts","../src/components/common/Pointer.tsx","../src/utils/round.ts","../src/utils/convert.ts","../src/components/common/Hue.tsx","../src/components/common/Saturation.tsx","../src/utils/compare.ts","../src/hooks/useColorManipulation.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/utils/nonce.ts","../src/hooks/useStyleSheet.ts","../src/components/common/ColorPicker.tsx","../src/components/HexColorPicker.tsx","../src/components/common/Alpha.tsx","../src/components/common/AlphaColorPicker.tsx","../src/components/HexAlphaColorPicker.tsx","../src/components/HslaColorPicker.tsx","../src/components/HslaStringColorPicker.tsx","../src/components/HslColorPicker.tsx","../src/components/HslStringColorPicker.tsx","../src/components/HsvaColorPicker.tsx","../src/components/HsvaStringColorPicker.tsx","../src/components/HsvColorPicker.tsx","../src/components/HsvStringColorPicker.tsx","../src/components/RgbaColorPicker.tsx","../src/components/RgbaStringColorPicker.tsx","../src/components/RgbColorPicker.tsx","../src/components/RgbStringColorPicker.tsx","../src/utils/validate.ts","../src/components/common/ColorInput.tsx","../src/components/HexColorInput.tsx"],"sourcesContent":["import { useRef } from \"react\";\r\n\r\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\r\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\r\n  const callbackRef = useRef(handler);\r\n  const fn = useRef((value: T) => {\r\n    callbackRef.current && callbackRef.current(value);\r\n  });\r\n  callbackRef.current = handler;\r\n\r\n  return fn.current;\r\n}\r\n","// Clamps a value between an upper and lower bound.\r\n// We use ternary operators because it makes the minified code\r\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\r\nexport const clamp = (number: number, min = 0, max = 1): number => {\r\n  return number > max ? max : number < min ? min : number;\r\n};\r\n","import React, { useRef, useMemo, useEffect } from \"react\";\r\n\r\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\r\nimport { clamp } from \"../../utils/clamp\";\r\n\r\nexport interface Interaction {\r\n  left: number;\r\n  top: number;\r\n}\r\n\r\n// Check if an event was triggered by touch\r\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \r\n{\r\n  return false;\r\n  // return \"touches\" in event\r\n};\r\n\r\n// Finds a proper touch point by its identifier\r\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\r\n  for (let i = 0; i < touches.length; i++) {\r\n    if (touches[i].identifier === touchId) return touches[i];\r\n  }\r\n  return touches[0];\r\n};\r\n\r\n// Finds the proper window object to fix iframe embedding issues\r\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\r\n  return window;\r\n};\r\n\r\n// Returns a relative position of the pointer inside the node's bounding box\r\nconst getRelativePosition = (\r\n  node: HTMLDivElement,\r\n  event: MouseEvent | TouchEvent,\r\n  touchId: null | number\r\n): Interaction => {\r\n  const rect = node.getBoundingClientRect();\r\n\r\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\r\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\r\n\r\n  return {\r\n    left: clamp((pointer.pageX - (rect.left + window.scrollX)) / rect.width),\r\n    top: clamp((pointer.pageY - (rect.top + window.scrollY)) / rect.height),\r\n  };\r\n};\r\n\r\n// Browsers introduced an intervention, making touch events passive by default.\r\n// This workaround removes `preventDefault` call from the touch handlers.\r\n// https://github.com/facebook/react/issues/19651\r\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\r\n  !isTouch(event) && event.preventDefault();\r\n};\r\n\r\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\r\n// If we detected a touch interaction before, we prefer reacting to touch events only.\r\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\r\n  return hasTouch && !isTouch(event);\r\n};\r\n\r\ninterface Props {\r\n  onMove: (interaction: Interaction) => void;\r\n  onKey: (offset: Interaction) => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\r\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\r\n  const touchId = useRef<null | number>(null);\r\n  const hasTouch = useRef(false);\r\n\r\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\r\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\r\n      const el = container.current;\r\n      if (!el) return;\r\n\r\n      // Prevent text selection\r\n      preventDefaultMove(nativeEvent);\r\n\r\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\r\n\r\n      if (isTouch(nativeEvent)) {\r\n        hasTouch.current = false;\r\n        const changedTouches = nativeEvent.changedTouches || [];\r\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\r\n      }\r\n\r\n      el.focus();\r\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\r\n      toggleDocumentEvents(true);\r\n    };\r\n\r\n    const handleMove = (event: MouseEvent | TouchEvent) => {\r\n      // Prevent text selection\r\n      preventDefaultMove(event);\r\n\r\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\r\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\r\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\r\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\r\n      // without pressing it down\r\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\r\n\r\n      if (isDown && container.current) {\r\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\r\n      } else {\r\n        toggleDocumentEvents(false);\r\n      }\r\n    };\r\n\r\n    const handleMoveEnd = () => toggleDocumentEvents(false);\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent) => {\r\n      const keyCode = event.which || event.keyCode;\r\n\r\n      // Ignore all keys except arrow ones\r\n      if (keyCode < 37 || keyCode > 40) return;\r\n      // Do not scroll page by arrow keys when document is focused on the element\r\n      event.preventDefault();\r\n      // Send relative offset to the parent component.\r\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\r\n      // to reduce the size of the library\r\n      onKeyCallback({\r\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\r\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\r\n      });\r\n    };\r\n\r\n    function toggleDocumentEvents(state?: boolean) {\r\n      // Add or remove additional pointer event listeners\r\n      if (state) {\r\n        window.addEventListener(\"mousemove\", handleMove);\r\n      }\r\n      else {\r\n        window.removeEventListener(\"mousemove\", handleMove);\r\n      }\r\n    }\r\n\r\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\r\n  }, [onKeyCallback, onMoveCallback]);\r\n\r\n  // Remove window event listeners before unmounting\r\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      onMouseDown={handleMoveStart}\r\n      className=\"react-colorful__interactive\"\r\n      ref={container}\r\n      onKeyDown={handleKeyDown}\r\n      tabIndex={0}\r\n      role=\"slider\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const Interactive = React.memo(InteractiveBase);\r\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\r\n","import React from \"react\";\r\nimport { formatClassName } from \"../../utils/format\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  top?: number;\r\n  left: number;\r\n  color: string;\r\n}\r\n\r\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\r\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\r\n\r\n  const style = {\r\n    top: `${top * 100}%`,\r\n    left: `${left * 100}%`,\r\n  };\r\n\r\n  return (\r\n    <div className={nodeClassName} style={style}>\r\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\r\n    </div>\r\n  );\r\n};\r\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\r\n  return Math.round(base * number) / base;\r\n};\r\n","import { round } from \"./round\";\r\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\r\n\r\n/**\r\n * Valid CSS <angle> units.\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\r\n */\r\nconst angleUnits: Record<string, number> = {\r\n  grad: 360 / 400,\r\n  turn: 360,\r\n  rad: 360 / (Math.PI * 2),\r\n};\r\n\r\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\r\n\r\nexport const hexToRgba = (hex: string): RgbaColor => {\r\n  if (hex[0] === \"#\") hex = hex.substring(1);\r\n\r\n  if (hex.length < 6) {\r\n    return {\r\n      r: parseInt(hex[0] + hex[0], 16),\r\n      g: parseInt(hex[1] + hex[1], 16),\r\n      b: parseInt(hex[2] + hex[2], 16),\r\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\r\n    };\r\n  }\r\n\r\n  return {\r\n    r: parseInt(hex.substring(0, 2), 16),\r\n    g: parseInt(hex.substring(2, 4), 16),\r\n    b: parseInt(hex.substring(4, 6), 16),\r\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\r\n  };\r\n};\r\n\r\nexport const parseHue = (value: string, unit = \"deg\"): number => {\r\n  return Number(value) * (angleUnits[unit] || 1);\r\n};\r\n\r\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\r\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\r\n  const match = matcher.exec(hslString);\r\n\r\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\r\n\r\n  return hslaToHsva({\r\n    h: parseHue(match[1], match[2]),\r\n    s: Number(match[3]),\r\n    l: Number(match[4]),\r\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\r\n  });\r\n};\r\n\r\nexport const hslStringToHsva = hslaStringToHsva;\r\n\r\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\r\n  s *= (l < 50 ? l : 100 - l) / 100;\r\n\r\n  return {\r\n    h: h,\r\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\r\n    v: l + s,\r\n    a,\r\n  };\r\n};\r\n\r\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\r\n\r\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\r\n  const hh = ((200 - s) * v) / 100;\r\n\r\n  return {\r\n    h: round(h),\r\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\r\n    l: round(hh / 2),\r\n    a: round(a, 2),\r\n  };\r\n};\r\n\r\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\r\n  const { h, s, l } = hsvaToHsla(hsva);\r\n  return `hsl(${h}, ${s}%, ${l}%)`;\r\n};\r\n\r\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\r\n  const { h, s, v } = roundHsva(hsva);\r\n  return `hsv(${h}, ${s}%, ${v}%)`;\r\n};\r\n\r\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\r\n  const { h, s, v, a } = roundHsva(hsva);\r\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\r\n};\r\n\r\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\r\n  const { h, s, l, a } = hsvaToHsla(hsva);\r\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\r\n};\r\n\r\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\r\n  h = (h / 360) * 6;\r\n  s = s / 100;\r\n  v = v / 100;\r\n\r\n  const hh = Math.floor(h),\r\n    b = v * (1 - s),\r\n    c = v * (1 - (h - hh) * s),\r\n    d = v * (1 - (1 - h + hh) * s),\r\n    module = hh % 6;\r\n\r\n  return {\r\n    r: round([v, c, b, b, d, v][module] * 255),\r\n    g: round([d, v, v, c, b, b][module] * 255),\r\n    b: round([b, b, d, v, v, c][module] * 255),\r\n    a: round(a, 2),\r\n  };\r\n};\r\n\r\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\r\n  const { r, g, b } = hsvaToRgba(hsva);\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\r\n  const { r, g, b, a } = hsvaToRgba(hsva);\r\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n};\r\n\r\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\r\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\r\n  const match = matcher.exec(hsvString);\r\n\r\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\r\n\r\n  return roundHsva({\r\n    h: parseHue(match[1], match[2]),\r\n    s: Number(match[3]),\r\n    v: Number(match[4]),\r\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\r\n  });\r\n};\r\n\r\nexport const hsvStringToHsva = hsvaStringToHsva;\r\n\r\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\r\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\r\n  const match = matcher.exec(rgbaString);\r\n\r\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\r\n\r\n  return rgbaToHsva({\r\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\r\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\r\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\r\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\r\n  });\r\n};\r\n\r\nexport const rgbStringToHsva = rgbaStringToHsva;\r\n\r\nconst format = (number: number) => {\r\n  const hex = number.toString(16);\r\n  return hex.length < 2 ? \"0\" + hex : hex;\r\n};\r\n\r\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\r\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\r\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\r\n};\r\n\r\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\r\n  const max = Math.max(r, g, b);\r\n  const delta = max - Math.min(r, g, b);\r\n\r\n  // prettier-ignore\r\n  const hh = delta\r\n    ? max === r\r\n      ? (g - b) / delta\r\n      : max === g\r\n        ? 2 + (b - r) / delta\r\n        : 4 + (r - g) / delta\r\n    : 0;\r\n\r\n  return {\r\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\r\n    s: round(max ? (delta / max) * 100 : 0),\r\n    v: round((max / 255) * 100),\r\n    a,\r\n  };\r\n};\r\n\r\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\r\n  h: round(hsva.h),\r\n  s: round(hsva.s),\r\n  v: round(hsva.v),\r\n  a: round(hsva.a, 2),\r\n});\r\n\r\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\r\n\r\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\r\n\r\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\r\n  const { h, s, v } = roundHsva(hsva);\r\n  return { h, s, v };\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Interactive, Interaction } from \"./Interactive\";\r\nimport { Pointer } from \"./Pointer\";\r\n\r\nimport { hsvaToHslString } from \"../../utils/convert\";\r\nimport { formatClassName } from \"../../utils/format\";\r\nimport { clamp } from \"../../utils/clamp\";\r\nimport { round } from \"../../utils/round\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  hue: number;\r\n  onChange: (newHue: { h: number }) => void;\r\n}\r\n\r\nconst HueBase = ({ className, hue, onChange }: Props) => {\r\n  const handleMove = (interaction: Interaction) => {\r\n    onChange({ h: 360 * interaction.left });\r\n  };\r\n\r\n  const handleKey = (offset: Interaction) => {\r\n    // Hue measured in degrees of the color circle ranging from 0 to 360\r\n    onChange({\r\n      h: clamp(hue + offset.left * 360, 0, 360),\r\n    });\r\n  };\r\n\r\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\r\n\r\n  return (\r\n    <div className={nodeClassName}>\r\n      <Interactive\r\n        onMove={handleMove}\r\n        onKey={handleKey}\r\n        aria-label=\"Hue\"\r\n        aria-valuenow={round(hue)}\r\n        aria-valuemax=\"360\"\r\n        aria-valuemin=\"0\"\r\n      >\r\n        <Pointer\r\n          className=\"react-colorful__hue-pointer\"\r\n          left={hue / 360}\r\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\r\n        />\r\n      </Interactive>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Hue = React.memo(HueBase);\r\n","import React from \"react\";\r\nimport { Interactive, Interaction } from \"./Interactive\";\r\nimport { Pointer } from \"./Pointer\";\r\nimport { HsvaColor } from \"../../types\";\r\nimport { hsvaToHslString } from \"../../utils/convert\";\r\nimport { clamp } from \"../../utils/clamp\";\r\nimport { round } from \"../../utils/round\";\r\n\r\ninterface Props {\r\n  hsva: HsvaColor;\r\n  onChange: (newColor: { s: number; v: number }) => void;\r\n}\r\n\r\nconst SaturationBase = ({ hsva, onChange }: Props) => {\r\n  const handleMove = (interaction: Interaction) => {\r\n    onChange({\r\n      s: interaction.left * 100,\r\n      v: 100 - interaction.top * 100,\r\n    });\r\n  };\r\n\r\n  const handleKey = (offset: Interaction) => {\r\n    // Saturation and brightness always fit into [0, 100] range\r\n    onChange({\r\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\r\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\r\n    });\r\n  };\r\n\r\n  const containerStyle = {\r\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\r\n  };\r\n\r\n  return (\r\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\r\n      <Interactive\r\n        onMove={handleMove}\r\n        onKey={handleKey}\r\n        aria-label=\"Color\"\r\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\r\n      >\r\n        <Pointer\r\n          className=\"react-colorful__saturation-pointer\"\r\n          top={1 - hsva.v / 100}\r\n          left={hsva.s / 100}\r\n          color={hsvaToHslString(hsva)}\r\n        />\r\n      </Interactive>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Saturation = React.memo(SaturationBase);\r\n","import { hexToRgba } from \"./convert\";\r\nimport { ObjectColor } from \"../types\";\r\n\r\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\r\n  if (first === second) return true;\r\n\r\n  for (const prop in first) {\r\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\r\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\r\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\r\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\r\n    // there is or not), and then as a type TS can iterate over.\r\n    if (\r\n      ((first as unknown) as Record<string, number>)[prop] !==\r\n      ((second as unknown) as Record<string, number>)[prop]\r\n    )\r\n      return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const equalColorString = (first: string, second: string): boolean => {\r\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\r\n};\r\n\r\nexport const equalHex = (first: string, second: string): boolean => {\r\n  if (first.toLowerCase() === second.toLowerCase()) return true;\r\n\r\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\r\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\r\n};\r\n","import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { useEventCallback } from \"./useEventCallback\";\r\n\r\nexport function useColorManipulation<T extends AnyColor>(\r\n  colorModel: ColorModel<T>,\r\n  color: T,\r\n  onChange?: (color: T) => void\r\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\r\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\r\n  const onChangeCallback = useEventCallback<T>(onChange);\r\n\r\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\r\n  // all internal calculations are based on HSVA model\r\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\r\n\r\n  // By using this ref we're able to prevent extra updates\r\n  // and the effects recursion during the color conversion\r\n  const cache = useRef({ color, hsva });\r\n\r\n  // Update local HSVA-value if `color` property value is changed,\r\n  // but only if that's not the same color that we just sent to the parent\r\n  useEffect(() => {\r\n    if (!colorModel.equal(color, cache.current.color)) {\r\n      const newHsva = colorModel.toHsva(color);\r\n      cache.current = { hsva: newHsva, color };\r\n      updateHsva(newHsva);\r\n    }\r\n  }, [color, colorModel]);\r\n\r\n  // Trigger `onChange` callback only if an updated color is different from cached one;\r\n  // save the new color to the ref to prevent unnecessary updates\r\n  useEffect(() => {\r\n    let newColor;\r\n    if (\r\n      !equalColorObjects(hsva, cache.current.hsva) &&\r\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\r\n    ) {\r\n      cache.current = { hsva, color: newColor };\r\n      onChangeCallback(newColor);\r\n    }\r\n  }, [hsva, colorModel, onChangeCallback]);\r\n\r\n  // Merge the current HSVA color object with updated params.\r\n  // For example, when a child component sends `h` or `s` only\r\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\r\n    updateHsva((current) => Object.assign({}, current, params));\r\n  }, []);\r\n\r\n  return [hsva, handleChange];\r\n}\r\n","import { useLayoutEffect, useEffect } from \"react\";\r\n\r\n// React currently throws a warning when using useLayoutEffect on the server.\r\n// To get around it, we can conditionally useEffect on the server (no-op) and\r\n// useLayoutEffect in the browser.\r\nexport const useIsomorphicLayoutEffect =\r\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\r\n","declare const __webpack_nonce__: string | undefined;\r\nlet nonce: string | undefined;\r\n\r\n/**\r\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\r\n * https://webpack.js.org/guides/csp/\r\n */\r\nexport const getNonce = (): string | undefined => {\r\n  if (nonce) return nonce;\r\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\r\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\r\n */\r\nexport const setNonce = (hash: string): void => {\r\n  nonce = hash;\r\n};\r\n","import { RefObject } from \"react\";\r\n\r\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\r\nimport { getNonce } from \"../utils/nonce\";\r\n\r\n// Bundler is configured to load this as a processed minified CSS-string\r\nimport styles from \"../css/styles.css\";\r\n\r\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\r\n\r\n/**\r\n * Injects CSS code into the document's <head>\r\n */\r\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>, root?: ShadowRoot): void => {\r\n  useIsomorphicLayoutEffect(() => {\r\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\r\n\r\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\r\n      const styleElement = parentDocument.createElement(\"style\");\r\n      styleElement.innerHTML = styles;\r\n      styleElementMap.set(parentDocument, styleElement);\r\n\r\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\r\n      const nonce = getNonce();\r\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\r\n\r\n      if (root) {\r\n        root.prepend(styleElement);\r\n      } else {\r\n        parentDocument.head.appendChild(styleElement);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { Hue } from \"./Hue\";\r\nimport { Saturation } from \"./Saturation\";\r\n\r\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\r\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\r\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\r\nimport { formatClassName } from \"../../utils/format\";\r\n\r\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\r\n  colorModel: ColorModel<T>;\r\n}\r\n\r\nexport const ColorPicker = <T extends AnyColor>({\r\n  className,\r\n  colorModel,\r\n  color = colorModel.defaultColor,\r\n  onChange,\r\n  root,\r\n  ...rest\r\n\r\n}: Props<T>): JSX.Element => {\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  useStyleSheet(nodeRef, root);\r\n\r\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\r\n\r\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\r\n\r\n  return (\r\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\r\n      <Saturation hsva={hsva} onChange={updateHsva} />\r\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalHex } from \"../utils/compare\";\r\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"000\",\r\n  toHsva: hexToHsva,\r\n  fromHsva: ({ h, s, v }) => hsvaToHex({ h, s, v, a: 1 }),\r\n  equal: equalHex,\r\n};\r\n\r\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Interactive, Interaction } from \"./Interactive\";\r\nimport { Pointer } from \"./Pointer\";\r\n\r\nimport { hsvaToHslaString } from \"../../utils/convert\";\r\nimport { formatClassName } from \"../../utils/format\";\r\nimport { clamp } from \"../../utils/clamp\";\r\nimport { round } from \"../../utils/round\";\r\nimport { HsvaColor } from \"../../types\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  hsva: HsvaColor;\r\n  onChange: (newAlpha: { a: number }) => void;\r\n}\r\n\r\nexport const Alpha = ({ className, hsva, onChange }: Props): JSX.Element => {\r\n  const handleMove = (interaction: Interaction) => {\r\n    onChange({ a: interaction.left });\r\n  };\r\n\r\n  const handleKey = (offset: Interaction) => {\r\n    // Alpha always fit into [0, 1] range\r\n    onChange({ a: clamp(hsva.a + offset.left) });\r\n  };\r\n\r\n  // We use `Object.assign` instead of the spread operator\r\n  // to prevent adding the polyfill (about 150 bytes gzipped)\r\n  const colorFrom = hsvaToHslaString(Object.assign({}, hsva, { a: 0 }));\r\n  const colorTo = hsvaToHslaString(Object.assign({}, hsva, { a: 1 }));\r\n\r\n  const gradientStyle = {\r\n    backgroundImage: `linear-gradient(90deg, ${colorFrom}, ${colorTo})`,\r\n  };\r\n\r\n  const nodeClassName = formatClassName([\"react-colorful__alpha\", className]);\r\n  const ariaValue = round(hsva.a * 100);\r\n\r\n  return (\r\n    <div className={nodeClassName}>\r\n      <div className=\"react-colorful__alpha-gradient\" style={gradientStyle} />\r\n      <Interactive\r\n        onMove={handleMove}\r\n        onKey={handleKey}\r\n        aria-label=\"Alpha\"\r\n        aria-valuetext={`${ariaValue}%`}\r\n        aria-valuenow={ariaValue}\r\n        aria-valuemin=\"0\"\r\n        aria-valuemax=\"100\"\r\n      >\r\n        <Pointer\r\n          className=\"react-colorful__alpha-pointer\"\r\n          left={hsva.a}\r\n          color={hsvaToHslaString(hsva)}\r\n        />\r\n      </Interactive>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport { Hue } from \"./Hue\";\r\nimport { Saturation } from \"./Saturation\";\r\nimport { Alpha } from \"./Alpha\";\r\n\r\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\r\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\r\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\r\nimport { formatClassName } from \"../../utils/format\";\r\n\r\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\r\n  colorModel: ColorModel<T>;\r\n}\r\n\r\nexport const AlphaColorPicker = <T extends AnyColor>({\r\n  className,\r\n  colorModel,\r\n  color = colorModel.defaultColor,\r\n  onChange,\r\n  root,\r\n  ...rest\r\n}: Props<T>): JSX.Element => {\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  useStyleSheet(nodeRef, root);\r\n\r\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\r\n\r\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\r\n\r\n  return (\r\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\r\n      <Saturation hsva={hsva} onChange={updateHsva} />\r\n      <Hue hue={hsva.h} onChange={updateHsva} />\r\n      <Alpha hsva={hsva} onChange={updateHsva} className=\"react-colorful__last-control\" />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalHex } from \"../utils/compare\";\r\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"0001\",\r\n  toHsva: hexToHsva,\r\n  fromHsva: hsvaToHex,\r\n  equal: equalHex,\r\n};\r\n\r\nexport const HexAlphaColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\r\n  <AlphaColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, HslaColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { hslaToHsva, hsvaToHsla } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<HslaColor> = {\r\n  defaultColor: { h: 0, s: 0, l: 0, a: 1 },\r\n  toHsva: hslaToHsva,\r\n  fromHsva: hsvaToHsla,\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const HslaColorPicker = (props: Partial<ColorPickerBaseProps<HslaColor>>): JSX.Element => (\r\n  <AlphaColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { hslaStringToHsva, hsvaToHslaString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"hsla(0, 0%, 0%, 1)\",\r\n  toHsva: hslaStringToHsva,\r\n  fromHsva: hsvaToHslaString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const HslaStringColorPicker = (\r\n  props: Partial<ColorPickerBaseProps<string>>\r\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, HslColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { hslaToHsva, hsvaToHsla, hslaToHsl } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<HslColor> = {\r\n  defaultColor: { h: 0, s: 0, l: 0 },\r\n  toHsva: ({ h, s, l }) => hslaToHsva({ h, s, l, a: 1 }),\r\n  fromHsva: (hsva) => hslaToHsl(hsvaToHsla(hsva)),\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const HslColorPicker = (props: Partial<ColorPickerBaseProps<HslColor>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { hslStringToHsva, hsvaToHslString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"hsl(0, 0%, 0%)\",\r\n  toHsva: hslStringToHsva,\r\n  fromHsva: hsvaToHslString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const HslStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, HsvaColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { roundHsva } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<HsvaColor> = {\r\n  defaultColor: { h: 0, s: 0, v: 0, a: 1 },\r\n  toHsva: (hsva) => hsva,\r\n  fromHsva: roundHsva,\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const HsvaColorPicker = (props: Partial<ColorPickerBaseProps<HsvaColor>>): JSX.Element => (\r\n  <AlphaColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { hsvaStringToHsva, hsvaToHsvaString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"hsva(0, 0%, 0%, 1)\",\r\n  toHsva: hsvaStringToHsva,\r\n  fromHsva: hsvaToHsvaString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const HsvaStringColorPicker = (\r\n  props: Partial<ColorPickerBaseProps<string>>\r\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, HsvColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { hsvaToHsv } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<HsvColor> = {\r\n  defaultColor: { h: 0, s: 0, v: 0 },\r\n  toHsva: ({ h, s, v }) => ({ h, s, v, a: 1 }),\r\n  fromHsva: hsvaToHsv,\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const HsvColorPicker = (props: Partial<ColorPickerBaseProps<HsvColor>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { hsvStringToHsva, hsvaToHsvString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"hsv(0, 0%, 0%)\",\r\n  toHsva: hsvStringToHsva,\r\n  fromHsva: hsvaToHsvString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const HsvStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, RgbaColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { rgbaToHsva, hsvaToRgba } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<RgbaColor> = {\r\n  defaultColor: { r: 0, g: 0, b: 0, a: 1 },\r\n  toHsva: rgbaToHsva,\r\n  fromHsva: hsvaToRgba,\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const RgbaColorPicker = (props: Partial<ColorPickerBaseProps<RgbaColor>>): JSX.Element => (\r\n  <AlphaColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { rgbaStringToHsva, hsvaToRgbaString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"rgba(0, 0, 0, 1)\",\r\n  toHsva: rgbaStringToHsva,\r\n  fromHsva: hsvaToRgbaString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const RgbaStringColorPicker = (\r\n  props: Partial<ColorPickerBaseProps<string>>\r\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps, RgbColor } from \"../types\";\r\nimport { equalColorObjects } from \"../utils/compare\";\r\nimport { rgbaToHsva, hsvaToRgba, rgbaToRgb } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<RgbColor> = {\r\n  defaultColor: { r: 0, g: 0, b: 0 },\r\n  toHsva: ({ r, g, b }) => rgbaToHsva({ r, g, b, a: 1 }),\r\n  fromHsva: (hsva) => rgbaToRgb(hsvaToRgba(hsva)),\r\n  equal: equalColorObjects,\r\n};\r\n\r\nexport const RgbColorPicker = (props: Partial<ColorPickerBaseProps<RgbColor>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","import React from \"react\";\r\n\r\nimport { ColorPicker } from \"./common/ColorPicker\";\r\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\r\nimport { equalColorString } from \"../utils/compare\";\r\nimport { rgbStringToHsva, hsvaToRgbString } from \"../utils/convert\";\r\n\r\nconst colorModel: ColorModel<string> = {\r\n  defaultColor: \"rgb(0, 0, 0)\",\r\n  toHsva: rgbStringToHsva,\r\n  fromHsva: hsvaToRgbString,\r\n  equal: equalColorString,\r\n};\r\n\r\nexport const RgbStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\r\n  <ColorPicker {...props} colorModel={colorModel} />\r\n);\r\n","const matcher = /^#?([0-9A-F]{3,8})$/i;\r\n\r\nexport const validHex = (value: string, alpha?: boolean): boolean => {\r\n  const match = matcher.exec(value);\r\n  const length = match ? match[1].length : 0;\r\n\r\n  return (\r\n    length === 3 || // '#rgb' format\r\n    length === 6 || // '#rrggbb' format\r\n    (!!alpha && length === 4) || // '#rgba' format\r\n    (!!alpha && length === 8) // '#rrggbbaa' format\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\r\nimport { ColorInputBaseProps } from \"../../types\";\r\n\r\ninterface Props extends ColorInputBaseProps {\r\n  /** Blocks typing invalid characters and limits string length */\r\n  escape: (value: string) => string;\r\n  /** Checks that value is valid color string */\r\n  validate: (value: string) => boolean;\r\n  /** Processes value before displaying it in the input */\r\n  format?: (value: string) => string;\r\n  /** Processes value before sending it in `onChange` */\r\n  process?: (value: string) => string;\r\n}\r\n\r\nexport const ColorInput = (props: Props): JSX.Element => {\r\n  const { color = \"\", onChange, onBlur, escape, validate, format, process, ...rest } = props;\r\n  const [value, setValue] = useState(() => escape(color));\r\n  const onChangeCallback = useEventCallback<string>(onChange);\r\n  const onBlurCallback = useEventCallback<React.FocusEvent<HTMLInputElement>>(onBlur);\r\n\r\n  // Trigger `onChange` handler only if the input value is a valid color\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const inputValue = escape(e.target.value);\r\n      setValue(inputValue);\r\n      if (validate(inputValue)) onChangeCallback(process ? process(inputValue) : inputValue);\r\n    },\r\n    [escape, process, validate, onChangeCallback]\r\n  );\r\n\r\n  // Take the color from props if the last typed color (in local state) is not valid\r\n  const handleBlur = useCallback(\r\n    (e: React.FocusEvent<HTMLInputElement>) => {\r\n      if (!validate(e.target.value)) setValue(escape(color));\r\n      onBlurCallback(e);\r\n    },\r\n    [color, escape, validate, onBlurCallback]\r\n  );\r\n\r\n  // Update the local state when `color` property value is changed\r\n  useEffect(() => {\r\n    setValue(escape(color));\r\n  }, [color, escape]);\r\n\r\n  return (\r\n    <input\r\n      {...rest}\r\n      value={format ? format(value) : value}\r\n      spellCheck=\"false\" // the element should not be checked for spelling errors\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorInputBaseProps } from \"../types\";\r\n\r\nimport { validHex } from \"../utils/validate\";\r\nimport { ColorInput } from \"./common/ColorInput\";\r\n\r\ninterface HexColorInputProps extends ColorInputBaseProps {\r\n  /** Enables `#` prefix displaying */\r\n  prefixed?: boolean;\r\n  /** Allows `#rgba` and `#rrggbbaa` color formats */\r\n  alpha?: boolean;\r\n}\r\n\r\n/** Adds \"#\" symbol to the beginning of the string */\r\nconst prefix = (value: string) => \"#\" + value;\r\n\r\nexport const HexColorInput = (props: HexColorInputProps): JSX.Element => {\r\n  const { prefixed, alpha, ...rest } = props;\r\n\r\n  /** Escapes all non-hexadecimal characters including \"#\" */\r\n  const escape = useCallback(\r\n    (value: string) => value.replace(/([^0-9A-F]+)/gi, \"\").substring(0, alpha ? 8 : 6),\r\n    [alpha]\r\n  );\r\n\r\n  /** Validates hexadecimal strings */\r\n  const validate = useCallback((value: string) => validHex(value, alpha), [alpha]);\r\n\r\n  return (\r\n    <ColorInput\r\n      {...rest}\r\n      escape={escape}\r\n      format={prefixed ? prefix : undefined}\r\n      process={prefix}\r\n      validate={validate}\r\n    />\r\n  );\r\n};\r\n"],"names":["useEventCallback","handler","callbackRef","useRef","fn","value","current","clamp","number","min","max","_excluded","getRelativePosition","node","event","touchId","rect","getBoundingClientRect","pointer","left","pageX","window","scrollX","width","top","pageY","scrollY","height","preventDefaultMove","preventDefault","Interactive","React","memo","_ref","onMove","onKey","rest","_objectWithoutPropertiesLoose","container","onMoveCallback","onKeyCallback","hasTouch","_useMemo","useMemo","handleMove","buttons","toggleDocumentEvents","state","addEventListener","removeEventListener","_ref2","nativeEvent","el","isInvalid","focus","keyCode","which","handleMoveStart","handleKeyDown","useEffect","createElement","_extends","onMouseDown","className","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","color","_ref$top","nodeClassName","style","backgroundColor","round","digits","base","Math","pow","angleUnits","grad","turn","rad","PI","hexToHsva","hex","rgbaToHsva","hexToRgba","substring","length","r","parseInt","g","b","a","parseHue","unit","Number","hslaStringToHsva","hslString","match","exec","hslaToHsva","h","s","l","undefined","v","hslStringToHsva","hsvaToHex","hsva","rgbaToHex","hsvaToRgba","hsvaToHsla","hh","hsvaToHslString","_hsvaToHsla","hsvaToHslaString","_hsvaToHsla2","_ref3","floor","c","d","module","hsvaStringToHsva","hsvString","roundHsva","hsvStringToHsva","rgbaStringToHsva","rgbaString","rgbStringToHsva","format","toString","_ref4","alphaHex","_ref5","delta","Hue","hue","onChange","interaction","offset","Saturation","containerStyle","equalColorObjects","first","second","prop","equalColorString","replace","equalHex","toLowerCase","useColorManipulation","colorModel","onChangeCallback","_useState","useState","toHsva","updateHsva","cache","equal","newHsva","newColor","fromHsva","handleChange","useCallback","params","Object","assign","nonce","useIsomorphicLayoutEffect","useLayoutEffect","getNonce","__webpack_nonce__","styleElementMap","Map","useStyleSheet","nodeRef","root","parentDocument","ownerDocument","document","has","styleElement","innerHTML","set","setAttribute","prepend","head","appendChild","ColorPicker","_ref$color","defaultColor","_useColorManipulation","Alpha","gradientStyle","backgroundImage","ariaValue","AlphaColorPicker","_ref7","_roundHsva2","_roundHsva3","_roundHsva","_hsvaToRgba2","_ref6","_hsvaToRgba","matcher","ColorInput","props","_props$color","onBlur","escape","validate","process","setValue","onBlurCallback","e","inputValue","target","handleBlur","spellCheck","prefix","prefixed","alpha","validHex","hash"],"mappings":"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"}